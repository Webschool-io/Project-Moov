#!/usr/bin/env node
"use strict";

var colors   = require('colors');
var request  = require('request');
var inquirer = require('inquirer');
var program  = require('commander');
var shell    = require('shelljs');
var parse    = require('xml2js').parseString; 

var search   = 'https://yts.ag/api/v2/list_movies.json?query_term=';
var details	 = 'https://yts.ag/api/v2/movie_details.json?movie_id=';

program
	.version('[0.0.1] - MoviesCLI'.cyan)
	.command('search <movie>')
	.description('Search for a movie')
	.action(function (movie) {

		request({
			url  : search + encodeURI(movie),
			json : true
		}, function (err, res, response) {

			var r = response.data.movies;
			var list = [];

			console.log('Results for: '.green + movie + '\r\n');
			
			for (var i in r) {
				list.push({
					'name'  : r[i].title_long,
					'value' : r[i].id
				});
			};

			inquirer.prompt([
				{
					type    : 'list',
					name    : 'movie',
					message : 'Results for: ' + movie,
					choices : list,
					default : 0 
				}
			]).then(function (answers) {
				request({
					url 	: details + answers.movie,
					json	: true
				}, function (err, res, response) {
					var movie 		= response.data.movie;
					var torrents	= movie.torrents;
					var list 		= [];

					for (var i in torrents) {
						list.push({
							name 	: torrents[i].quality,
							value	: torrents[i].url
						});
					}

					console.log('Movie: '.green + movie.title_long + '\r\n');

					inquirer.prompt([
						{
							type    : 'list',
							name    : 'torrent',
							message : 'Available qualities for: ' + movie.title_long,
							choices : list,
							default : 0
						}
					]).then(function (answers) {
						streamMovie(answers.torrent);
					});
				});
			});

		});
	});

var streamMovie = function (torrentURL) {
	shell.exec('peerflix ' + torrentURL + ' --vlc');
}

program.parse(process.argv);
